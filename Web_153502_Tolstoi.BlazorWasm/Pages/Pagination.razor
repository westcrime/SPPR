@inject IDataService dataService;
@implements IDisposable

@using Web_153502_Tolstoi.BlazorWasm.Services;
@using Web_153502_Tolstoi.Domain.Entities;

@if (dataService.TotalPages >1)
{
   <nav aria-label="...">
        <ul class="pagination">
           

            @if (dataService.CurrentPage == 1)
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item ">
                    <a class="page-link" @onclick="()=>dataService.GetProductListAsync(Category,dataService.CurrentPage-1)" tabindex="-1">Previous</a>
                </li>
                <li class="page-item"><a class="page-link" @onclick="()=>dataService.GetProductListAsync(Category,dataService.CurrentPage-1)">@(dataService.CurrentPage - 1)</a></li>
            }

            <li class="page-item active">
                <a class="page-link" >@dataService.CurrentPage</a>
            </li>
            
            @if (dataService.CurrentPage != dataService.TotalPages)
            {
                <li class="page-item"><button class="page-link" @onclick="()=>dataService.GetProductListAsync(Category,dataService.CurrentPage+1)">@(dataService.CurrentPage + 1)</button></li>
                <li class="page-item">
                    <button class="page-link" @onclick="()=>dataService.GetProductListAsync(Category,dataService.CurrentPage+1)">Next</button>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#">Next</a>
                </li>
            }

            
        </ul>
    </nav>
}



@code {
	[Parameter]
	public string? Category { get; set; }

    protected override void OnInitialized()
    {
        dataService.DataLoaded += StateHasChanged;

    }
    public void Dispose()
    {
        dataService.DataLoaded -= StateHasChanged;
    }

}